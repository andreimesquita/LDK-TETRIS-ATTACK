#ifndef _LDK_RANDOM_
#define _LDK_RANDOM_

#define RANDOM_SAMPLE_COUNT 64 * 4 //64 lines with 4 integers each
#define RANDOM_MAX_VALUE 0xFFFFFFFF 
namespace ldare
{
	struct RandomTable
	{
		uint8 sampleIndex;
		static const uint32 sample[RANDOM_SAMPLE_COUNT];
	};

	//NOTE: table generated with: head -c 1024 /dev/random | xxd -i -c 16 -u
	const uint32 RandomTable::sample[] =  
	{
		0X0C93A81F, 0X1FC720E5, 0XB20565E8, 0X7E60FD53,
		0X9E9ED0B5, 0XAAEC2A3D, 0X2F06EF17, 0XDCB3E1B1,
		0X92BEAF2E, 0X8B346B8F, 0XC76BF50D, 0XE0327965,
		0XFC5E5215, 0XEBACD1C2, 0X522347F7, 0X8C5D313F,
		0X7F1EDDB1, 0X464AE1A8, 0X9B83B618, 0X66CBA41F,
		0X2625F12C, 0X25502D6B, 0X2DF242CA, 0X6CCC6F6C,
		0XE26D7686, 0X7F4712C4, 0XB5BE6436, 0XD0589FDB,
		0X177104D9, 0X45B6744A, 0X52A18830, 0X26B5D277,
		0XBD65B669, 0X618CD077, 0XEA1AB95F, 0X95CC3539,
		0X7B57F9C6, 0X926620D7, 0X43A5D851, 0XD8917567,
		0X9D6D422A, 0X1DA9E428, 0X70B76D4D, 0X1EC91667,
		0XEF518BB2, 0X796049B9, 0XE43AFE77, 0XE5E54EB6,
		0XDC65B415, 0X7A3024D1, 0X075B1232, 0XD35A8618,
		0X2B75A2A6, 0XA3FA8953, 0X73B4D00C, 0X7BB5CA4D,
		0XCF390BB3, 0XE3B698D8, 0X5399F4A6, 0XC53A293C,
		0X2B4DF4AE, 0X87A1DCBA, 0XDA9A34AB, 0X2D4BA679,
		0XD46FB6F5, 0X5EA55EF7, 0XDD4955F5, 0X6D75B570,
		0X2B34E994, 0X0D701489, 0X86224E9E, 0X42FF9ECB,
		0XCBE3CD67, 0X313C501F, 0XE8FE8E08, 0X7EBEE2B8,
		0XC124F03E, 0X3BAB7666, 0XF6A1925C, 0X2EADED26,
		0X6EEBBC65, 0X886E3DD2, 0X1E41B3DC, 0XDF6F7EAD,
		0X0C53C708, 0X94BE21F8, 0X56988A74, 0X97EF1F17,
		0XB9F51F4C, 0X641D7572, 0X0CF88D9D, 0X899AA84E,
		0X3006C5C1, 0XE6887724, 0XC3E21F85, 0X81737411,
		0X6C5A0D72, 0X56B7BA5D, 0X3DB59FE0, 0X7F06DA1A,
		0X96AD9086, 0X045A7ABB, 0X291B2DC4, 0XF21DDEDD,
		0XC1CB7A6E, 0X7579C62F, 0X1F449DD9, 0XD17627F9,
		0XA1AB42B7, 0X65C87B1A, 0XA57F9F6C, 0XD398D9A5,
		0X3535AACE, 0X144772AF, 0XA0BD3E5D, 0X18F3EC05,
		0XE6C5F3EA, 0X11114155, 0X06038466, 0X0786AF3A,
		0X487FD5B9, 0X059F2B2E, 0X5C5C47C9, 0X5220A17F,
		0XBB48457E, 0XAFA6C013, 0XCF78B571, 0XE5F8A54E,
		0XB81791FD, 0XB4E5ADE7, 0X7D33E5B7, 0X1545047D,
		0XD9214E8A, 0X75085B7D, 0XB8AF763C, 0X0FCF74AC,
		0XF1E67974, 0X093B9A5B, 0XB204AE50, 0XAE678FA9,
		0X673BBBC3, 0X84BFCD95, 0X3C407DAA, 0X5FCA4EAD,
		0X4B4B5680, 0X25D758D5, 0X13DB0656, 0X39DF6835,
		0XC209FE33, 0XD7708FB1, 0XB84892EB, 0X67D71E2B,
		0X1B0432E9, 0X42A5B9A3, 0X62D05AA5, 0XAB7C5105,
		0X0F04CF37, 0XA0D7EC47, 0XCEE21D31, 0X23589464,
		0X13447A95, 0XC24FFC8A, 0X7954AE0E, 0XE122D26B,
		0X26F57051, 0X99E7669B, 0X3D5C3239, 0X7EBAD0B8,
		0XAFE0DCC4, 0X9EA71BBA, 0XA1A0F404, 0XD1BF507D,
		0X6B991A00, 0X1FF09F0E, 0XAD89DAC7, 0X3478E80D,
		0X4FF43C20, 0X0E9D3E9D, 0XB5C1ECD1, 0X9F960BA2,
		0XEF343C7C, 0X9AE3BBDC, 0X29CAAF75, 0XD23397FC,
		0XDD033D7E, 0X16CC9F8C, 0XD12751DD, 0X60B458ED,
		0X3C0A02FE, 0X961135F9, 0X1864B551, 0XE4F7FC5D,
		0XD728361E, 0X4502B033, 0X12754EBA, 0XE3DF22AE,
		0X0C09B8F3, 0XB5227EB2, 0XF5A53144, 0X77B8E079,
		0XEECE3084, 0XCB904FBA, 0X4578B6AB, 0X83FD8067,
		0XDCC0AFD6, 0XD63702BB, 0XA1B6DE0D, 0X7D303E6F,
		0X8CBA7315, 0X3EBAFEBB, 0XCB0CCF6B, 0XED199295,
		0X0998478D, 0X6EE18D6F, 0X78682107, 0XAB1787EA,
		0XB216F45A, 0X6CC49B23, 0X1B5FD8F0, 0XA20B8801,
		0X6A079DD6, 0X944D5D08, 0XC4D91AC1, 0X0062DDB5,
		0X9D3902EA, 0XB25FA7DF, 0X9A24FF91, 0XFF83EFF1,
		0X4F61FD91, 0X1C487818, 0XB9751DF5, 0XD22D3543,
		0XB08A53A9, 0X67A8EF93, 0XCD051E3C, 0XE1A1A8FB,
		0XE244F7A8, 0X4CE1B084, 0X3276AB78, 0XA9A19637,
		0X0F35EDB8, 0X2DC13F7D, 0XC4B754E6, 0XB083FC1C,
		0X04DB264B, 0X467D7D45, 0XE5014E65, 0XAB98BDD1,
		0XCD80AF24, 0X859A0AEB, 0X88CED15B, 0XAAC96F7B,
		0XCC0A2244, 0X24DA639C, 0X9E37F3CB, 0X29947DC9};

	static RandomTable _randomTable;
	void seed(uint32 seed)
	{
		_randomTable.sampleIndex = (uint8) (seed % RANDOM_SAMPLE_COUNT);
	}

	uint32 random()
	{
		uint8 index = ++_randomTable.sampleIndex;
		return _randomTable.sample[index];
	}

	//
	double random01()
	{
		return ((double)random())/RANDOM_MAX_VALUE;
	}

	uint32 randomRange(int32 min, int32 max)
	{
		uint32 interval = MAX(min,max) - MIN(min,max);
		return min + random() % (interval+1);
	}
}

#undef RANDOM_SAMPLE_COUNT
#endif // _LDK_RANDOM_
